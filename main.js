!function(){"use strict";class e{constructor(e,t){let{data:s,handleCardClick:n,handleCardDelete:r,handleCardLike:i}=e;this._template=t,this._name=s.name,this._link=s.link,this._handleCardClick=n,this._handleCardLike=i,this._handleCardDelete=r,this._likes=s.likes,this._owner=s.owner._id,this._id=s._id}_handleDeleteButtonVisibility(e){this._owner!==e._id&&(this._deleteButton.style.display="none")}deleteCard(){this._cardElement.remove()}updateLikes(e){this._likeCounter.textContent=e.likes.length,this._likeButton.classList.toggle("card__like-button_active")}getLikesCount(e){this._likes.some((t=>t._id===e._id))&&this._likeButton.classList.add("card__like-button_active"),this._likeCounter.textContent=this._likes.length<1?"":this._likes.length}_getTemplate(){return this._cardElement=this._template.querySelector(".card").cloneNode(!0),this._cardElement}_handleLikeButton(){const e=this._likeButton.classList.contains("card__like-button_active");this._handleCardLike(e,this)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete(this)})),this._cardPicture.addEventListener("click",(()=>this._handleCardClick({name:this._name,link:this._link})))}generateCard(e){return this._card=this._getTemplate(),this._cardPicture=this._card.querySelector(".card__image"),this._cardPicture.src=this._link,this._deleteButton=this._card.querySelector(".card__delete-button"),this._likeCounter=this._card.querySelector(".card__like-counter"),this._likeButton=this._card.querySelector(".card__like-button"),this.getLikesCount(e),this._handleDeleteButtonVisibility(e),this._cardPicture.alt=this._name+" photo",this._card.querySelector(".card__description").textContent=this._name,this._setEventListeners(e),this._card}}class t{constructor(e,t){this._settings=t,this._form=e}_showInputError(e){this._error=this._form.querySelector(".".concat(e.name,"-input-error")),e.classList.add(this._settings.inputErrorClass),this._error.classList.add(this._settings.errorClass),this._error.textContent=e.validationMessage}_hideInputError(e){this._error=this._form.querySelector(".".concat(e.name,"-input-error")),e.classList.remove(this._settings.inputErrorClass),this._error.classList.remove(this._settings.errorClass),this._error.textContent=""}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._hasInvalidInput(this._inputs)?(this._button.classList.add(this._settings.inactiveButtonClass),this._button.disabled=!0):(this._button.classList.remove(this._settings.inactiveButtonClass),this._button.disabled=!1)}_setEventListeners(){this._button=this._form.querySelector(this._settings.submitButtonSelector),this._inputs=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this.toggleButtonState(),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e)}handleButtonText(e){this._popup.querySelector(".popup__button").textContent=e}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-button"))&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._data={},this._inputs=this._popup.querySelectorAll(".popup__form-input")}_getInputValues(){return this._inputs.forEach((e=>{this._data[e.name]=e.value})),this._data}close(){super.close(),this._form.reset()}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{this._data=this._getInputValues(),e.preventDefault(),this._handleSubmit(this._data)}))}}var r={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__form-button",inactiveButtonClass:"popup__form-button_disabled",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__error_active"};const i=document.querySelector(".user__edit-button"),a=document.querySelector(".popup__form-input_type_name"),o=document.querySelector(".popup__form-input_type_profession"),l=document.querySelector(".popup__form_type_profile"),h=document.querySelector(".popup__form_type_place"),c=document.querySelector(".popup__form_type_avatar"),_=document.querySelector(".user__add-button"),d=document.querySelector(".user__avatar-overlay"),u=document.querySelector("#template").content;let p={};new t(l,r).enableValidation();const m=new t(h,r);m.enableValidation();const v=new t(c,r);v.enableValidation();const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}addLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e._id),{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e._id),{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}editAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((e=>this._checkResponse(e)))}editProfile(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.profession})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e._id),{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.place,link:e.url})}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>this._checkResponse(e)))}_checkResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"545ebbe5-83ef-479f-9e3a-79ad4591aa10","Content-Type":"application/json"}}),k=new n(".popup_type_profile",(function(e){k.handleButtonText("Saving..."),f.editProfile(e).then((e=>{S.setUserInfo(e),k.close()})).catch((e=>console.log(e))).finally((()=>{k.handleButtonText("Save")}))}));k.setEventListeners();const y=new class extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}openForDelete(e){return super.open(),e&&(this._data=e),this._data}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._data)}))}}(".popup_type_delete",(function(e){y.handleButtonText("Saving..."),f.deleteCard(e).then((t=>{e.deleteCard(),y.close()})).catch((e=>console.log(e))).finally((()=>{y.handleButtonText("Yes")}))}));y.setEventListeners();const g=new n(".popup_type_place",(function(e){g.handleButtonText("Saving..."),f.addCard(e).then((e=>{L.addItem(e),g.close()})).catch((e=>console.log(e))).finally((()=>{g.handleButtonText("Save")}))}));g.setEventListeners();const b=new n(".popup_type_avatar",(function(e){b.handleButtonText("Saving..."),f.editAvatar(e).then((e=>{S.setUserAvatar(e.avatar),b.close()})).catch((e=>console.log(e))).finally((()=>{b.handleButtonText("Save")}))}));b.setEventListeners();const C=new class extends s{open(e){let{name:t,link:s}=e;super.open(),this._picture=this._popup.querySelector(".popup__image"),this._picture.src=s,this._picture.alt=t+" photo",this._title=this._popup.querySelector(".popup__image-title"),this._title.textContent=t}}(".popup_type_image");C.setEventListeners();const L=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(e){Array.from(e).forEach((e=>{this.addItem(e)}))}}({renderer:t=>function(t){let{item:s}=t;return new e({data:s,handleCardClick:e=>{let{name:t,link:s}=e;C.open({name:t,link:s})},handleCardDelete:e=>{y.openForDelete(e)},handleCardLike:(e,t)=>{e?f.removeLike(t).then((e=>{t.updateLikes(e)})).catch((e=>console.log(e))):f.addLike(t).then((e=>{t.updateLikes(e)})).catch((e=>console.log(e)))}},u).generateCard(p)}({item:t})},".gallery"),S=new class{constructor(e){let{name:t,info:s,avatar:n}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._avatar=document.querySelector(n)}setUserAvatar(e){this._avatar.src=e}getUserInfo(){return this._data={name:this._name.textContent,about:this._about.textContent},this._data}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}}({name:".user__name",info:".user__profession",avatar:".user__avatar-image"});Promise.all([f.getUserInfo(),f.getInitialCards()]).then((e=>{let[t,s]=e;p=t,S.setUserInfo(t),S.setUserAvatar(t.avatar),L.renderItems(s)})).catch((e=>console.log(e))),i.addEventListener("click",(()=>{k.open();const e=S.getUserInfo();a.value=e.name,o.value=e.about})),_.addEventListener("click",(()=>{g.open(),m.toggleButtonState()})),d.addEventListener("click",(()=>{b.open(),v.toggleButtonState()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,